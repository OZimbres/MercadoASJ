package main.view.venda;

import java.awt.ScrollPane;

import javax.swing.JPanel;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;

import main.model.Estoque;

public class PainelVenda extends JPanel {
    /**
     * Creates new form Global
     */
    public PainelVenda() {
        initComponents();
    }

<<<<<<< HEAD
    //-----===| MÉTODOS |===-----//
    // Gerar Painel Venda
    private JPanel criarPainelVenda() {
        JPanel telaPainelVenda = new JPanel();
        telaPainelVenda.setLayout(new GridBagLayout());
        GridBagConstraints elemento = new GridBagConstraints();

        jPanelClienteCadastrado = criarClienteCadastrado();
        jPanelResumoPreVenda = criarResumoPreVenda();
        jPanelControleProdutos = criarControleProdutos();
        jPanelListaDetalhada = criarListaDetalhada();

        componentesGlobal = new ArrayList<>(List.of(
                jPanelClienteCadastrado,
                jPanelResumoPreVenda,
                jPanelControleProdutos,
                jPanelListaDetalhada
        ));

        int[] posicaoNoArrayGlobal = {0, 1, 2, 3};
        int[][] posicaoComponentesGlobal = {
                {0, 0, 2, 1, 1, 1, 0, 0, 0, 0},
                {2, 0, 1, 3, 1, 1, 0, 0, 0, 0},
                {0, 1, 2, 1, 1, 1, 0, 0, 0, 0},
                {2, 1, 2, 2, 1, 1, 0, 0, 0, 0}
        };

        for (int i = 0; i < 4; i++) {
            elemento.gridx = posicaoComponentesGlobal[i][0];
            elemento.gridy = posicaoComponentesGlobal[i][1];
            elemento.gridwidth = posicaoComponentesGlobal[i][2];
            elemento.gridheight = posicaoComponentesGlobal[i][3];
            elemento.weightx = posicaoComponentesGlobal[i][4];
            elemento.weighty = posicaoComponentesGlobal[i][5];
            elemento.insets = new Insets(posicaoComponentesGlobal[i][6], posicaoComponentesGlobal[i][7],
                    posicaoComponentesGlobal[i][8], posicaoComponentesGlobal[i][9]);
=======
     /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        JPanel panelCLiente = new JPanel();
        JLabel labelClienteTitulo = new JLabel();
        JTextField inputCpfCliente = new JTextField();
        JLabel labelCpfCliente = new JLabel();
        JLabel labelInfoCliente = new JLabel();
        JButton btnProcurarCliente = new JButton();
        JButton btnAdicionarCliente = new JButton();
        JPanel panelProduto = new JPanel();
        JTextField inputCodProduto = new JTextField();
        JLabel labelProdutoTitulo = new JLabel();
        JLabel labelInfoProduto = new JLabel();
        JButton btnProcurarProduto = new JButton();
        JLabel labelCodProduto = new JLabel();
        JLabel labelQtd = new JLabel();
        JTextField inputQuantidade = new JTextField();
        JButton btnMaisQtd = new JButton();
        JButton btnMenosQtd = new JButton();
        JButton btnAdicionarProduto = new JButton();
        ScrollPane scrollPanelFull = new ScrollPane();
        JPanel panelCompraResumida = new JPanel();
        JButton btnCancelarCompra = new JButton();
        JButton btnConfirmarCompra = new JButton();
        JLabel labelClienteSelecionado = new JLabel();
        JLabel labelInfoClienteSelecionado = new JLabel();
        ScrollPane scrollPaneCompraResumida = new ScrollPane();

        panelCLiente.setBorder(BorderFactory.createLineBorder(null));

        labelClienteTitulo.setText("Cliente VIP");

        inputCpfCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCpfClienteActionPerformed(evt);
            }
        });

        labelCpfCliente.setText("CPF:");
>>>>>>> ffc8ebf391960e402d0d7dc61066f63586d90489

        labelInfoCliente.setText("Nome:");

        btnProcurarCliente.setText("Procurar");
        btnProcurarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnProcurarClienteMouseClicked(evt);
            }
        });

        btnAdicionarCliente.setBackground(new java.awt.Color(51, 255, 51));
        btnAdicionarCliente.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnAdicionarCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnAdicionarCliente.setText("Adicionar");
        btnAdicionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarClienteActionPerformed(evt);
            }
        });

        GroupLayout panelCLienteLayout = new GroupLayout(panelCLiente);
        panelCLiente.setLayout(panelCLienteLayout);
        panelCLienteLayout.setHorizontalGroup(
            panelCLienteLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelCLienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCLienteLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(panelCLienteLayout.createSequentialGroup()
                        .addComponent(labelInfoCliente, GroupLayout.PREFERRED_SIZE, 195, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                        .addComponent(btnAdicionarCliente))
                    .addGroup(panelCLienteLayout.createSequentialGroup()
                        .addGroup(panelCLienteLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(labelClienteTitulo)
                            .addGroup(panelCLienteLayout.createSequentialGroup()
                                .addComponent(labelCpfCliente)
                                .addGap(9, 9, 9)
                                .addComponent(inputCpfCliente, GroupLayout.PREFERRED_SIZE, 97, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnProcurarCliente)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelCLienteLayout.setVerticalGroup(
            panelCLienteLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, panelCLienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelClienteTitulo)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCLienteLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(inputCpfCliente, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCpfCliente)
                    .addComponent(btnProcurarCliente))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCLienteLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelInfoCliente)
                    .addComponent(btnAdicionarCliente))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelProduto.setBorder(BorderFactory.createLineBorder(null));

        inputCodProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCodProdutoActionPerformed(evt);
            }
        });

        labelProdutoTitulo.setText("Produto");

        labelInfoProduto.setText("Info:");

        btnProcurarProduto.setText("Procurar");

        labelCodProduto.setText("CÓD:");

        labelQtd.setText("Quantidade:");

        inputQuantidade.setText("0");
        inputQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputQuantidadeActionPerformed(evt);
            }
        });

        btnMaisQtd.setText("+");
        btnMaisQtd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaisQtdActionPerformed(evt);
            }
        });

        btnMenosQtd.setText("-");
        btnMenosQtd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenosQtdActionPerformed(evt);
            }
        });

        btnAdicionarProduto.setBackground(new java.awt.Color(51, 255, 51));
        btnAdicionarProduto.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnAdicionarProduto.setForeground(new java.awt.Color(255, 255, 255));
        btnAdicionarProduto.setText("Adicionar");

        GroupLayout panelProdutoLayout = new GroupLayout(panelProduto);
        panelProduto.setLayout(panelProdutoLayout);
        panelProdutoLayout.setHorizontalGroup(
            panelProdutoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProdutoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(labelInfoProduto, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelProdutoLayout.createSequentialGroup()
                        .addGroup(panelProdutoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(labelProdutoTitulo)
                            .addGroup(panelProdutoLayout.createSequentialGroup()
                                .addComponent(labelCodProduto)
                                .addGap(9, 9, 9)
                                .addComponent(inputCodProduto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnProcurarProduto)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelProdutoLayout.createSequentialGroup()
                        .addComponent(labelQtd)
                        .addGap(8, 8, 8)
                        .addComponent(btnMenosQtd)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputQuantidade, GroupLayout.PREFERRED_SIZE, 52, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMaisQtd)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdicionarProduto)))
                .addContainerGap())
        );
        panelProdutoLayout.setVerticalGroup(
            panelProdutoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelProdutoTitulo)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProdutoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(inputCodProduto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCodProduto)
                    .addComponent(btnProcurarProduto))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelInfoProduto)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProdutoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(inputQuantidade, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelQtd)
                    .addComponent(btnMaisQtd)
                    .addComponent(btnMenosQtd)
                    .addComponent(btnAdicionarProduto))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scrollPanelFull.setBackground(new java.awt.Color(204, 204, 204));

        panelCompraResumida.setBorder(BorderFactory.createLineBorder(null));

        btnCancelarCompra.setBackground(new java.awt.Color(255, 0, 0));
        btnCancelarCompra.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnCancelarCompra.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelarCompra.setText("Cancelar");
        btnCancelarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCompraActionPerformed(evt);
            }
        });

        btnConfirmarCompra.setBackground(new java.awt.Color(51, 255, 0));
        btnConfirmarCompra.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnConfirmarCompra.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirmarCompra.setText("Confirmar");
        btnConfirmarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarCompraActionPerformed(evt);
            }
        });

        labelClienteSelecionado.setText("Cliente:");

        labelInfoClienteSelecionado.setText("__________kk________");

        GroupLayout panelCompraResumidaLayout = new GroupLayout(panelCompraResumida);
        panelCompraResumida.setLayout(panelCompraResumidaLayout);
        panelCompraResumidaLayout.setHorizontalGroup(
            panelCompraResumidaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelCompraResumidaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCompraResumidaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneCompraResumida, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelCompraResumidaLayout.createSequentialGroup()
                        .addComponent(btnCancelarCompra, GroupLayout.PREFERRED_SIZE, 89, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnConfirmarCompra, GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                    .addGroup(panelCompraResumidaLayout.createSequentialGroup()
                        .addGroup(panelCompraResumidaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(labelClienteSelecionado)
                            .addComponent(labelInfoClienteSelecionado))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelCompraResumidaLayout.setVerticalGroup(
            panelCompraResumidaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, panelCompraResumidaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelClienteSelecionado)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelInfoClienteSelecionado)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneCompraResumida, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCompraResumidaLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarCompra)
                    .addComponent(btnConfirmarCompra))
                .addContainerGap())
        );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelCLiente, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelProduto, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrollPanelFull, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCompraResumida, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(panelCompraResumida, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelCLiente, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelProduto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPanelFull, GroupLayout.PREFERRED_SIZE, 235, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }

    private void btnCancelarCompraActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    private void btnConfirmarCompraActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
    }                                                  

    private void inputCpfClienteActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void inputCodProdutoActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void inputQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void btnMaisQtdActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void btnMenosQtdActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void btnAdicionarClienteActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
    }                                                   

<<<<<<< HEAD
            { 0, 1, 2, 4, 1, 1, 0, 0, 0, 0 }, // Tabela resumida

            { 0, 5, 1, 1, 1, 1, 0, 0, 0, 0 }, // Botão Limpar
            { 1, 5, 1, 1, 1, 1, 0, 0, 0, 0 } // Botão Concluir
        };

        // Configurand modelo de exibição
        for (int i = 0; i < 4; i++) { // Menor que 4 pois 4 é a quantidade de item da janela
            elemento.gridx = posicaoComponentesResumoPreVenda[i][0];
            elemento.gridy = posicaoComponentesResumoPreVenda[i][1];
            elemento.gridwidth = posicaoComponentesResumoPreVenda[i][2];
            elemento.gridheight = posicaoComponentesResumoPreVenda[i][3];
            elemento.weightx = posicaoComponentesResumoPreVenda[i][4];
            elemento.weighty = posicaoComponentesResumoPreVenda[i][5];
            elemento.insets = new Insets(posicaoComponentesResumoPreVenda[i][6], posicaoComponentesResumoPreVenda[i][7], posicaoComponentesResumoPreVenda[i][8], posicaoComponentesResumoPreVenda[i][9]);

            painelResumoPreVenda.add(componentesResumoPreVenda.get(posicaoNoArrayResumoPreVenda[i]), elemento);
        }

        return painelResumoPreVenda;
    }

    // Gerar painel Controle de Produto
    private JPanel criarControleProdutos() {
        JPanel painelControleProdutos = new JPanel();
        painelControleProdutos.setLayout(new GridBagLayout());
        GridBagConstraints elemento = new GridBagConstraints();

        componentesControleProdutos = new ArrayList<>(List.of(
                buttonAdicionarProduto,
                buttonEditarProduto,
                buttonRemoverProduto,
                labelInfoControleProdutos
        ));

        int[] posicaoNoArrayControleProdutos = {0, 1, 2, 3};
        int[][] posicaoComponentesControleProdutos = {
                {0, 0, 1, 1, 1, 1, 0, 0, 0, 0},
                {1, 0, 1, 1, 1, 1, 0, 0, 0, 0},
                {2, 0, 1, 1, 1, 1, 0, 0, 0, 0},
                {0, 1, 3, 1, 1, 1, 0, 0, 0, 0}
        };

        for (int i = 0; i < 4; i++) {
            elemento.gridx = posicaoComponentesControleProdutos[i][0];
            elemento.gridy = posicaoComponentesControleProdutos[i][1];
            elemento.gridwidth = posicaoComponentesControleProdutos[i][2];
            elemento.gridheight = posicaoComponentesControleProdutos[i][3];
            elemento.weightx = posicaoComponentesControleProdutos[i][4];
            elemento.weighty = posicaoComponentesControleProdutos[i][5];
            elemento.insets = new Insets(posicaoComponentesControleProdutos[i][6],
                    posicaoComponentesControleProdutos[i][7], posicaoComponentesControleProdutos[i][8],
                    posicaoComponentesControleProdutos[i][9]);

            painelControleProdutos.add(componentesControleProdutos.get(posicaoNoArrayControleProdutos[i]), elemento);
        }

        return painelControleProdutos;
    }

    // Gerar painel Lista Detalhada
    private JPanel criarListaDetalhada(){
        JPanel painelListaDetalhada = new JPanel();
        // Setando layout
        painelListaDetalhada.setLayout(new GridBagLayout());
        // Configurando Painel
        GridBagConstraints elemento = new GridBagConstraints(); // Variável de controle de exibição de cada elemento

        tableModelListaDetalhada = new DefaultTableModel(new Object[][] {}, new String[] {"COD", "Produto", "QTD", "Preço U", "Preço T", "Preco VIP"});
        tableListaDetalhada = new JTable(tableModelListaDetalhada);

        // ArrayLista dos componentes a serem exibidos (Lista Detalhada)
        componentesListaDetalhada = new ArrayList<JComponent>(){
            {
                add(tableListaDetalhada); // Tabela detalhada dos produtos
            }
        };
        // Declarando os itens a serem utilizados (sua posição no ArrayList)
        int[] posicaoNoArrayListaDetalhada = {
            0 // Tabela
        };
        // Declarando os valores de cada Item
        int[][] posicaoComponentesListaDetalhada = {
            { 0, 0, 1, 1, 1, 1, 0, 0, 0, 0 }, // Tabela
        };

        // Configurand modelo de exibição
        for (int i = 0; i < 1; i++) { // Menor que 1 pois 1 é a quantidade de item da janela
            elemento.gridx = posicaoComponentesListaDetalhada[i][0];
            elemento.gridy = posicaoComponentesListaDetalhada[i][1];
            elemento.gridwidth = posicaoComponentesListaDetalhada[i][2];
            elemento.gridheight = posicaoComponentesListaDetalhada[i][3];
            elemento.weightx = posicaoComponentesListaDetalhada[i][4];
            elemento.weighty = posicaoComponentesListaDetalhada[i][5];
            elemento.insets = new Insets(posicaoComponentesListaDetalhada[i][6], posicaoComponentesListaDetalhada[i][7], posicaoComponentesListaDetalhada[i][8], posicaoComponentesListaDetalhada[i][9]);

            painelListaDetalhada.add(componentesListaDetalhada.get(posicaoNoArrayListaDetalhada[i]), elemento);
        }

        return painelListaDetalhada;
=======
    private void btnProcurarClienteMouseClicked(java.awt.event.MouseEvent evt) {                                                
        // TODO add your handling code here:
>>>>>>> ffc8ebf391960e402d0d7dc61066f63586d90489
    }
}
